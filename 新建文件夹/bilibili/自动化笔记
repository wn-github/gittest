什么是自动化测试？
人对软件的测试行为转变为由机器执行测试行为的一种实践

自动化测试分为哪几种？
1.单元测试  【开发过程中由开发人员完成】
2.API测试  【接口测试由测试人员完成】
3.UI测试  【测试人员】

自动化分类
1.半自动化：借助工具与数据结合进行批量性测试 airtest、postman、jemter
2.完全自动化：全部由代码和数据组成
3.CI集成测试：代码和数据结合，当代码合并的时候自动执行测试

自动化测试应用于那个阶段？
1.回归测试阶段
2.场景：兼容性测试、压力测试  【接口的压力测试】

自动化测试的流程？
1.开发完成项目交付测试之后
2.  定位相关功能的元素
3.准备测试数据  【Excel、csv文件、json文件、MySQL数据库】
4.按照分析的需求点进行测试代码的编写
5.准备好自己的测试环境  【appium的测试环境】
6.将测试代码与测试数据组合到一起，执行测试代码，生成测试报告
7.分析测试报告，定位bug
    测试报告中执行失败的用例？
        1.检查自己的代码是否存在逻辑上的错误
        2.代码逻辑上不存在错误，从开发的产品上找出原因
            a 交叉验证：新老版本的相同功能进行对比
            b 查看测试代码的日志
            c 查看服务器后台日志  【开发人员】
            d fiddler抓取报错功能的接口返回数据
8.开发对bug进行修复、修复之后回归测试  【重跑测试代码】
9.产品发布到预发或线上
10.代码合并与维护

自动化测试需要的准备？
1.python语言
2.最常用的模块：selenium、appium、pymysql、logging、xlrd、pytest、allure
3.allure测试报告生成
4.项目的结构
5.appium的环境：
    a java
    b SDK
    c node.js  【浏览器】
    d appium-desktop  【UI appium服务器】
    e python appium 模块

自动化测试的优点？
1.针对测试工作量大的可以使用自动化测试
2.使用某些功能重复使用率高的
3.避免一些人为因素产生的疏漏

自动化测试的缺点？
1.写代码和维护代码需要耗费大量的人力物力
2.对测试人员代码能力要求高
3.测试代码不稳定的，容易受到一些外界因素的影响
4.需求一旦变动，测试代码重写

什么样的项目适合进行自动化测试？
1.项目周期长的
2.需求变更不频繁
3.需求功能明确的

appium？
1.免费、开源、跨平台的测试app的一种自动化测试工具
【安卓、iOS、app：混合、原生、web】
2.c/s架构
    c端指的是python代码
    s端值得是appium服务器
3.工作原理










